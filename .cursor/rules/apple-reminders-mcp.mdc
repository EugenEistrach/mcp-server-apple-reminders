---
description: 
globs: 
alwaysApply: false
---
# Apple Reminders MCP Server Project Structure and Conventions

This project implements a Model Context Protocol (MCP) server for native integration with Apple Reminders on macOS. The server exposes a set of tools for creating, listing, and managing reminders and reminder lists, and is designed for use with platforms like Cursor, ChatWise, and Claude Desktop.

## Main Entry Point
- The main entry point is [`src/index.ts`](mdc:src/index.ts), which loads project configuration and starts the MCP server using [`src/server/server.ts`](mdc:src/server/server.ts).

## Server Layer
- [`src/server/server.ts`](mdc:src/server/server.ts): Configures and starts the MCP server, registers request handlers, and manages server lifecycle.
- [`src/server/handlers.ts`](mdc:src/server/handlers.ts): Registers all request handlers for the MCP server, including tool calls and prompt management.
- [`src/server/handlers.test.ts`](mdc:src/server/handlers.test.ts): Contains tests for server handler registration and prompt logic.

## Tool System
- [`src/tools/definitions.ts`](mdc:src/tools/definitions.ts): Defines the available MCP tools (e.g., `create_reminder`, `list_reminders`, `list_reminder_lists`) and their input schemas.
- [`src/tools/handlers.ts`](mdc:src/tools/handlers.ts): Implements the logic for each tool, including AppleScript and Swift-based operations.
- [`src/tools/index.ts`](mdc:src/tools/index.ts): Routes tool calls to the appropriate handler and exports the tool definitions.
- [`src/tools/handlers.test.ts`](mdc:src/tools/handlers.test.ts): Contains tests for tool handler logic.

## Utilities
- [`src/utils/reminders.ts`](mdc:src/utils/reminders.ts): Provides the `RemindersManager` class for interacting with Apple Reminders via a compiled Swift binary. Exports a singleton instance for use in handlers.
- [`src/utils/applescript.ts`](mdc:src/utils/applescript.ts): Utilities for executing AppleScript commands on macOS.
- [`src/utils/date.ts`](mdc:src/utils/date.ts): Utilities for parsing and formatting dates, including system 24-hour/12-hour detection.
- [`src/utils/logger.ts`](mdc:src/utils/logger.ts): Provides logging utilities for debugging and error reporting.
- [`src/utils/__mocks__/reminders.ts`](mdc:src/utils/__mocks__/reminders.ts): Mock implementation of the reminders manager for testing.

## Type Definitions
- [`src/types/index.ts`](mdc:src/types/index.ts): Contains TypeScript interfaces for reminders, reminder lists, server config, and tool handler signatures.

## Swift Integration
- [`src/swift/GetReminders.swift`](mdc:src/swift/GetReminders.swift): Swift source code for the native binary that interacts with Apple Reminders.
- [`src/swift/bin/GetReminders`](mdc:src/swift/bin/GetReminders): Compiled Swift binary used by the Node.js server.
- [`src/swift/build.sh`](mdc:src/swift/build.sh): Build script for compiling the Swift binary.
- [`src/swift/Info.plist`](mdc:src/swift/Info.plist): Info.plist for Swift project configuration.

## Testing
- Tests are located alongside their respective modules (e.g., [`src/server/handlers.test.ts`](mdc:src/server/handlers.test.ts), [`src/tools/handlers.test.ts`](mdc:src/tools/handlers.test.ts)).
- Mocks for reminders are provided in [`src/utils/__mocks__/reminders.ts`](mdc:src/utils/__mocks__/reminders.ts).

## Usage
- The server exposes MCP tools for creating, listing, and managing reminders and lists. See the [README.md](mdc:README.md) for usage examples and tool schemas.
- All code, comments, and documentation must be in English.

## Build & Run
- Use `npm run build:ts` to build TypeScript code.
- Use `npm run build:swift` to build the Swift binary.
- Use `npm run start` to start the MCP server.
- Use `npm test` to run tests.

## Directory Overview
```
src/
  index.ts           # Main entry point
  server/            # MCP server logic and handlers
  swift/             # Swift integration (source, binary, build script)
  tools/             # Tool definitions and handlers
  types/             # TypeScript type definitions
  utils/             # Utilities (reminders, AppleScript, date, logger, mocks)
```

Refer to the [README.md](mdc:README.md) for further details on configuration, usage, and integration with external platforms.
